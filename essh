#!/bin/bash

# TODO:
# imrpove help
# improve iterate through environments

function help {
  echo "usage:"
  echo " $(basename $0) [env_name [-p] | print [env_name] | ping env_name]"
  exit 1
}

function print_envs {
  if [ $# -gt 0 ]; then
    grep "$1" ${ENV_FILE_NAME}
  else
    cat ${ENV_FILE_NAME}
  fi
  exit 0
}

if [ $# = 0 ]; then
  help
fi

PORT=22
PARAMS=""
PRINT=""
PING=""
ENV_FILE_NAME="${HOME}/bin/.env.srv"

# iterate through parameters
while [ $# -gt 0 ]; do
  if [ "$1" = "-p" ]; then
    PARAMS="true"
  elif [ "$1" = "print" ]; then
    if [ ! -z "${PING}" ]; then
      echo "Can't use print and ping at the same time!"
      help
    fi
    PRINT="true"
  elif [ "$1" = "ping" ]; then
    if [ ! -z "${PRINT}" ]; then
      echo "Can't use print and ping at the same time!"
      help
    fi
    PING="true"
  elif [ "${ENV_NAME}" = "" ]; then
    ENV_NAME="$1"
  else
    echo "Check parameters!"
    help
  fi
  shift
done

if [ ! -z "${PRINT}" ]; then
  print_envs ${ENV_NAME}
fi

ENV_FILE=`grep "^[^#;]" ${ENV_FILE_NAME}`
IFS=$'\n'
ENV_ENTRIES=(${ENV_FILE})
IFS=' '

# iterate through environments
for ENV in "${ENV_ENTRIES[@]}"
do
  ENTRY=(${ENV})
  if [ "${ENTRY[1]}" = "${ENV_NAME}" ]; then
    if [ ! -z "${ENTRY[4]}" ]; then
      PORT=${ENTRY[4]}
    fi
    if [ ! -z "${PARAMS}" ]; then
      if [ -z "${ENTRY[5]}" ]; then
        echo "Parameters for ${ENV} not specifiled in ${ENV_FILE_NAME}!"
        exit 3
      fi
      PARAMS="${ENTRY[5]}"
    fi
    if [ -z "${PING}" ]; then
      echo ssh "${ENTRY[3]}"@"${ENTRY[2]}" -p ${PORT} ${PARAMS/'&'/' '}
      ssh "${ENTRY[3]}"@"${ENTRY[2]}" -p ${PORT} ${PARAMS/'&'/' '}
    else
      echo ping "${ENTRY[2]}"
      ping "${ENTRY[2]}"
    fi
    exit 0
  fi
done

echo Environment not found!

exit 2


#!/bin/bash

# TODO:
# improve help
# improve iterate through environments
# switch to use reasonable hosts format: user@hostname:port
# improve checking if entry is present in env file
# detect multiple entries with the same name
# scp functionality
# switch from group and name to "namespaces", like company:group:server
#  essh would call first unique id
# add did you mean for example with edit distance
# override environment settings with command line parameters
# update .env.srv entries

PORT=22
PARAMS=""
PRINT=""
PING=""
GROUP=""
ENV_NAME=""
USER=`whoami`
HOST=""
PARAMS=""
ENV_FILE_NAME="${HOME}/bin/.env.srv"

function help {
  echo "Another layer added on top of ssh/ping for faster operation on known servers"
  echo "Usage:"
  echo " $(basename $0) env_name [-p] [-f filename]"
  echo " $(basename $0) print [env_name] [-f filename]"
  echo " $(basename $0) ping env_name [-f filename]"
  echo " $(basename $0) add -g group -n name -h hostname [-u username] [-p port] [-P params] [-f filename]"
  echo;
  echo "Parameters:"
  echo " -f filename - common, use alternative configuration file"
  echo " -p          - connect, use of additional parameters specified in configuration file"
  echo;
  echo "Examples:"
  echo " $(basename $0) print home   - prints every entry for group 'home'"
  echo " $(basename $0) router -p    - connects to host router with use of additional parameters"
  echo;
  echo "Sample configuration file: env.srv"
  echo "Double spaces in configuration file are not allowed!"
  echo "Advantage over ~/.ssh/config or /etc/hosts - it's easier to store i.e. on Dropbox and use the same for every computer you use."
  echo "Default port - 22"
  echo "Default user - `whoami` - currently logged in"
  exit 1
}

function print_envs {
  if [ $# -gt 0 ]; then
    grep "$1" ${ENV_FILE_NAME}
  else
    cat ${ENV_FILE_NAME}
  fi
  exit 0
}

function add_env_iterate {
  while [ $# -gt 0 ]; do
    if [ "$1" = "-g" ]; then
      shift
      GROUP="$1"
    elif [ "$1" = "-n" ]; then
      shift
      ENV_NAME="$1"
    elif [ "$1" = "-u" ]; then
      shift
      USER="$1"
    elif [ "$1" = "-h" ]; then
      shift
      HOST="$1"
    elif [ "$1" = "-p" ]; then
      shift
      PORT="$1"
    elif [ "$1" = "-P" ]; then
      shift
      PARAMS="$1"
    fi
    shift
  done
}

function add_env {
  if [ -z "$GROUP" ]; then
    echo "Group cannot be empty!"; help
  fi
  if [ -z "$ENV_NAME" ]; then
    echo "Name cannot be empty!"; help
  fi
  if [ -z "$HOST" ]; then
    echo "Host cannot be empty!"; help
  fi
  if [ ! -z "`egrep \"\s${ENV_NAME}\s\" ${ENV_FILE_NAME}`" ]; then
    echo "Entry for ${ENV_NAME} already exists!"; exit -4
  fi
  echo "${GROUP} ${ENV_NAME} ${HOST} ${USER} ${PORT} ${PARAMS}" >> ${ENV_FILE_NAME}
  exit
}

if [ $# = 0 ]; then
  help
fi

# iterate through parameters
while [ $# -gt 0 ]; do
  if [ "$1" = "add" ]; then
    shift
    add_env_iterate $@
    add_env
  elif [ "$1" = "-p" ]; then
    PARAMS="true"
  elif [ "$1" = "print" ]; then
    if [ ! -z "${PING}" ]; then
      echo "Can't use print and ping at the same time!"; help
    fi
    PRINT="true"
  elif [ "$1" = "ping" ]; then
    if [ ! -z "${PRINT}" ]; then
      echo "Can't use print and ping at the same time!"; help
    fi
    PING="true"
  elif [ "$1" = "-f" ]; then
    shift
    if [ ! -z "$1" ]; then
      ENV_FILE_NAME="$1"
      echo "Using configuration file: ${ENV_FILE_NAME}"
    else
      echo "Alternative configuration file not specified!"; help
    fi
  elif [ "${ENV_NAME}" = "" ]; then
    ENV_NAME="$1"
  else
    echo "Check parameters!"; help
  fi
  shift
done

if [ ! -f "${ENV_FILE_NAME}" ]; then
  echo "Can't find configuration file: ${ENV_FILE_NAME}"
  exit -1
fi

if [ ! -z "${PRINT}" ]; then
  print_envs ${ENV_NAME}
fi

ENV_FILE=`grep "^[^#;]" ${ENV_FILE_NAME}`
IFS=$'\n'
ENV_ENTRIES=(${ENV_FILE})
IFS=' '

# iterate through environments
for ENV in "${ENV_ENTRIES[@]}"
do
  ENTRY=(${ENV})
  if [ "${ENTRY[1]}" = "${ENV_NAME}" ]; then
    SPACE=$(echo "${ENV}" | grep "  ")
    if [ ! -z "${SPACE}" ]; then
      echo -e "Check entry:\n${ENV}"; exit -4
    fi
    if [ ! -z "${ENTRY[4]}" ]; then
      PORT=${ENTRY[4]}
    fi
    if [ ! -z "${PARAMS}" ]; then
      if [ -z "${ENTRY[5]}" ]; then
        echo "Parameters for ${ENV} not specifiled in ${ENV_FILE_NAME}!"; exit -3
      fi
      PARAMS="${ENTRY[5]}"
    fi
    if [ -z "${PING}" ]; then
      echo ssh "${ENTRY[3]}"@"${ENTRY[2]}" -p ${PORT} ${PARAMS/'&'/' '}
      ssh "${ENTRY[3]}"@"${ENTRY[2]}" -p ${PORT} ${PARAMS/'&'/' '}
    else
      echo ping "${ENTRY[2]}"
      ping "${ENTRY[2]}"
    fi
    exit 0
  fi
done

echo Environment not found!

exit -2

